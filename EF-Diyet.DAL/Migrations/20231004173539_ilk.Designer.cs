// <auto-generated />
using System;
using EF_Diyet_UI.AppDbContex;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Diyet.DAL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231004173539_ilk")]
    partial class ilk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EF_Diyet_UI.Concrete.BesinBilgileri", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("BesinAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("GramKarsiligi")
                        .HasColumnType("real");

                    b.Property<float?>("Kalori")
                        .HasColumnType("real");

                    b.Property<float?>("Karbonhidrat")
                        .HasColumnType("real");

                    b.Property<string>("OlcuBirimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Protein")
                        .HasColumnType("real");

                    b.Property<float?>("Yag")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("BesinBilgi");
                });

            modelBuilder.Entity("EF_Diyet_UI.Concrete.Tarifler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklamasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TarifAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tarif");
                });

            modelBuilder.Entity("EF_Diyet_UI.Concrete.TuketilenBesin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("BesinBilgileriID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ogun")
                        .HasColumnType("int");

                    b.Property<float>("ToplamKalori")
                        .HasColumnType("real");

                    b.Property<DateTime>("TuketilenTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BesinBilgileriID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("TuketilenBesinler");
                });

            modelBuilder.Entity("Entities.Concrete.Kullanici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("Boy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Kilo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KullaniciSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Yas")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("Entities.Concrete.KullaniciHedefBilgileri", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Hedef")
                        .HasColumnType("int");

                    b.Property<float>("HedefKatSayi")
                        .HasColumnType("real");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KullaniciId")
                        .IsUnique();

                    b.ToTable("KullaniciHedef");
                });

            modelBuilder.Entity("Entities.Concrete.Makaleler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklamasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MakaleAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Makale");
                });

            modelBuilder.Entity("Entities.Concrete.VucutAnalizi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<double>("BMH")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<double>("VKI")
                        .HasColumnType("float");

                    b.Property<double>("VYO")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("KullaniciId")
                        .IsUnique();

                    b.ToTable("VucutAnalizleri");
                });

            modelBuilder.Entity("EF_Diyet_UI.Concrete.TuketilenBesin", b =>
                {
                    b.HasOne("EF_Diyet_UI.Concrete.BesinBilgileri", "BesinBilgileri")
                        .WithMany("TuketilenBesinler")
                        .HasForeignKey("BesinBilgileriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Kullanici", "Kullanici")
                        .WithMany("TuketilenBesinler")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BesinBilgileri");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Entities.Concrete.KullaniciHedefBilgileri", b =>
                {
                    b.HasOne("Entities.Concrete.Kullanici", "kullanici")
                        .WithOne("KullaniciHedefBilgileri")
                        .HasForeignKey("Entities.Concrete.KullaniciHedefBilgileri", "KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("kullanici");
                });

            modelBuilder.Entity("Entities.Concrete.VucutAnalizi", b =>
                {
                    b.HasOne("Entities.Concrete.Kullanici", "kullanici")
                        .WithOne("VucutAnalizi")
                        .HasForeignKey("Entities.Concrete.VucutAnalizi", "KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("kullanici");
                });

            modelBuilder.Entity("EF_Diyet_UI.Concrete.BesinBilgileri", b =>
                {
                    b.Navigation("TuketilenBesinler");
                });

            modelBuilder.Entity("Entities.Concrete.Kullanici", b =>
                {
                    b.Navigation("KullaniciHedefBilgileri")
                        .IsRequired();

                    b.Navigation("TuketilenBesinler");

                    b.Navigation("VucutAnalizi")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
